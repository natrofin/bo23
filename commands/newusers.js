const Discord = module.require('discord.js');
module.exports.run = async (bot, message, args) => {
    try {
        if (!message.member.hasPermission('MANAGE_CHANNELS')) return;
        let cmdchannelEmbed = new Discord.RichEmbed()
            .setColor('7FFFD4')
            .setTitle('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
        if (!args[0]) {
            bot.sendErrEmbed(cmdchannelEmbed, '–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª')
            return message.channel.send(cmdchannelEmbed)
        }
        let channel = message.mentions.channels.first() || message.guild.channels.get(bot.toNum(args[0]));
        if (!channel) {
            bot.sendErrEmbed(cmdchannelEmbed, '–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª')
            return message.channel.send(cmdchannelEmbed)
        }

        bot.guild.joinleave = channel.id;
        cmdchannelEmbed.addField(message.author.tag, `**–ö–∞–Ω–∞–ª ${channel} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π**`);

        message.channel.send(cmdchannelEmbed);
        /*
        async function setupChannel(){
            //create collector
            await message.channel.send(new Discord.RichEmbed()
            .setColor('RANDOM')
            .setTitle('**–£–ø–æ–º—è–Ω–∏—Ç–µ –∫–∞–Ω–∞–ª(#–∏–º—è–∫–∞–Ω–∞–ª–∞) –∫–∞–Ω–∞–ª–∞ –∫—É–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ**')
            .setDescription('–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ `–æ—Ç–º–µ–Ω–∞`')
            );
            const collector = message.channel.createMessageCollector(m => m.author.id === message.author.id && m.channel.id === message.channel.id, {time: 60000, max:2});
            collector.on('collect', async msg => {
                if(msg.content == '–æ—Ç–º–µ–Ω–∞'){
                    msg.react('üëå');
                    await collector.stop('collected')
                    return
                }
                channel = msg.mentions.channels.first();
                //console.log(require('util').inspect(channel)) //
                if(!channel) return bot.sendErrEmbed(new Discord.RichEmbed(), '–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª', true, message);
                bot.guild.joinleave = channel.id;
                
                await bot.guildsRep.save(bot.guild)
                await collector.stop('collected');//—è —Ç–µ—Å—Ç–∏–ª
                await message.channel.send(new Discord.RichEmbed().setDescription(`**–ö–∞–Ω–∞–ª <#${channel.id}> –Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è/—É—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**`));

                //bot.joinleave = 0;//temp
            });
            
            collector.on('stop', reason => {
                if(reason == 'collected') return;
                bot.sendErrEmbed(new Discord.RichEmbed(), '–°—Ä–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫', true, message);
            });
        }

        /**
         * .addField('', `
`)

        async function setupWcMessage(){
            await message.channel.send(new Discord.RichEmbed()
            .setColor('RANDOM')
            .addField(`–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ`, `
            
%username% - –Ω–∏–∫–Ω–µ–π–º –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
%mention% - —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ —É—á—Å–∞—Ç–Ω–∏–∫–∞ (–±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å \`<@id_—É—á–∞—Å—Ç–Ω–∏–∫–∞>\` –µ—Å–ª–∏ –Ω–µ—Ç –æ–±—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤) 
%membercount% - –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤,
%guildname% - –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞
[–î–æ–∫—É–º–µ–Ω—Ç –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Ç–µ–∫—Å—Ç–∞](https://support.discordapp.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-)`)
            .setTitle('**–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è**')
            .setDescription('–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ `–æ—Ç–º–µ–Ω–∞`')
            );
            const collector = message.channel.createMessageCollector(m => m.author.id === message.author.id && m.channel.id === message.channel.id, {time: 60000, max:2});

            collector.on('collect', async message => {
                if(message.content == '–æ—Ç–º–µ–Ω–∞'){
                    message.react('üëå');
                    await collector.stop('collected');
                    return
                }
                bot.guild.GuildwelcomeMessage = message.content;
                await bot.guildsRep.save(bot.guild);
                await message.channel.send(new Discord.RichEmbed().setDescription(`**–¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è**`));
                await collector.stop('collected');
            });

            collector.on('stop', reason => {
                if(reason == 'collected'){

                }else{
                    bot.sendErrEmbed(new Discord.RichEmbed(), '–°—Ä–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫', true, message);
                }
                
            });


            
        }


        async function setupBmMessage(){
            await message.channel.send(new Discord.RichEmbed()
            .setColor('RANDOM')
            .addField(`–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ`, `
            
%username% - –Ω–∏–∫–Ω–µ–π–º –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
%mention% - —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ —É—á—Å–∞—Ç–Ω–∏–∫–∞ (–±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å \`<@id_—É—á–∞—Å—Ç–Ω–∏–∫–∞>\` –µ—Å–ª–∏ –Ω–µ—Ç –æ–±—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤) 
%membercount% - –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤,
%guildname% - –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞
[–î–æ–∫—É–º–µ–Ω—Ç –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Ç–µ–∫—Å—Ç–∞](https://support.discordapp.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-)`)
            .setTitle('**–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—â–∞–Ω–∏—è**')
            .setDescription('–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ `–æ—Ç–º–µ–Ω–∞`')
            );
            const collector = message.channel.createMessageCollector(m => m.author.id === message.author.id && m.channel.id === message.channel.id, {time: 60000, max:2});

            collector.on('collect', async message => {
                if(message.content == '–æ—Ç–º–µ–Ω–∞'){
                    message.react('üëå');
                    await collector.stop('collected');
                    return
                }
                bot.guild.LeavewelcomeMessage = message.content;
                await bot.guildsRep.save(bot.guild);
                await message.channel.send(new Discord.RichEmbed().setDescription(`**–¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—â–∞–Ω–∏—è**`));
                await collector.stop('collected');
            });

            collector.on('stop', reason => {
                if(reason == 'collected'){

                }else{
                    bot.sendErrEmbed(new Discord.RichEmbed(), '–°—Ä–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫', true, message);
                }
                
            });


            
        }

        switch(args[0]){
            case 'channel': // —Å
                await setupChannel()//–æ–∫–µ–π
                break;//)))
                //‚ô•
            case '–ø—Ä–∏–≤–µ—Ç':
            case 'hm':
            case 'hellomessage':
                await setupWcMessage()
                break;
            case '–ø–∞–∫–∞':
            case 'lm':
            case 'leavemessage':
                await setupBmMessage()
                break;
            default:
                bot.sendErrEmbed(new Discord.RichEmbed(), '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç', true, message);
        }
        */
    } catch (err) {
        bot.logsErr(err)
    }
};
module.exports.help = {
    name: 'newusers',
    aliases: ['joinleave', '—É—á–∞—Å—Ç–Ω–∏–∫–∏', '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'welcome', 'wc'],
    description: '–ü—Ä–∏ –∑–∞—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª',
    category: '–ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
    usages: {
        '!wc channel': '–í –∫–∞–Ω–∞–ª #channel –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö',
        '!wc {–ø—Ä–∏–≤–µ—Ç/hm/hellomessage}': '–£–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤(–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)',
        '!wc {–ø–∞–∫–∞/lm/leavemessage}': '–£–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—â–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤(–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)'

    }
}; 